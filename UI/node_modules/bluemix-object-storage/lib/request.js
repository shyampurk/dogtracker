'use strict';

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _authenticationError = require('./authentication-error');

var _authenticationError2 = _interopRequireDefault(_authenticationError);

var _request = require('request');

var _request2 = _interopRequireDefault(_request);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var authUrl = 'https://identity.open.softlayer.com/v3/auth/tokens';

function Request(options, os) {
  return R(options).catch(_authenticationError2.default, function (e) {
    os.credentials.auth.identity.password.user.id = os.userId;
    os.credentials.auth.identity.password.user.password = os.password;
    os.credentials.auth.scope.project.id = os.projectId;
    var authOptions = { url: authUrl, method: 'post', body: os.credentials, json: true };
    return R(authOptions).then(function (_ref) {
      var response = _ref.response;
      var body = _ref.body;

      os.token = options.headers['x-auth-token'] = response.headers['x-subject-token'];
      return R(options);
    });
  });

  function R(options) {
    return new _bluebird2.default(function (resolve, reject) {
      (0, _request2.default)(options, function (err, response, body) {
        if (err) {
          reject({ err: err, response: response });
        } else if (response.statusCode === 401) {
          reject(new _authenticationError2.default());
        } else {
          resolve({ response: response, body: body });
        }
      });
    });
  }
}

module.exports = Request;